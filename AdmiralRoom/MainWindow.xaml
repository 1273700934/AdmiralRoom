<ribbon:RibbonWindow x:Name="ribbonWindow"
                     x:Class="Huoyaoyuan.AdmiralRoom.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:local="clr-namespace:Huoyaoyuan.AdmiralRoom"
                     xmlns:ribbon="urn:fluent-ribbon"
                     xmlns:Models="clr-namespace:Huoyaoyuan.AdmiralRoom.Models"
                     xmlns:Dock="http://schemas.xceed.com/wpf/xaml/avalondock"
                     xmlns:Theme2010="clr-namespace:Xceed.Wpf.AvalonDock.Themes;assembly=Xceed.Wpf.AvalonDock.Themes.VS2010"
                     xmlns:Theme2013="clr-namespace:Xceed.Wpf.AvalonDock.Themes;assembly=Xceed.Wpf.AvalonDock.Themes.VS2013"
                     xmlns:Views="clr-namespace:Huoyaoyuan.AdmiralRoom.Views"
                     xmlns:ViewStandalone="clr-namespace:Huoyaoyuan.AdmiralRoom.Views.Standalone"
                     mc:Ignorable="d"
                     FontFamily="{Binding FontFamily, Source={x:Static local:Config.Current}, Mode=OneWay}"
                     FontSize="{Binding FontSize, Source={x:Static local:Config.Current}, Mode=OneWay}"
                     Loaded="LoadLayout" Closed="SaveLayout"
                     Title="提督の部屋">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ribbon:Ribbon>
            <ribbon:Ribbon.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="Icons\VectorIcons.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ribbon:Ribbon.Resources>
            <ribbon:Ribbon.Menu>
                <ribbon:Backstage Header="提督の部屋" KeyTip="H">
                    <ribbon:BackstageTabControl>
                        <ribbon:BackstageTabItem Header="{Binding Resources.Options, Source={x:Static local:ResourceService.Current}}" KeyTip="O">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <Views:Settings DataContext="{x:Static local:Config.Current}"/>
                            </ScrollViewer>
                        </ribbon:BackstageTabItem>
                        <ribbon:BackstageTabItem Header="{Binding Resources.About, Source={x:Static local:ResourceService.Current}}" KeyTip="A">
                            <Views:About/>
                        </ribbon:BackstageTabItem>
                    </ribbon:BackstageTabControl>
                </ribbon:Backstage>
            </ribbon:Ribbon.Menu>
            <ribbon:RibbonTabItem Header="{Binding Resources.RibbonTab_Browse, Source={x:Static local:ResourceService.Current}}" KeyTip="B">
                <ribbon:RibbonGroupBox Header="{Binding Resources.Browser, Source={x:Static local:ResourceService.Current}}">
                    <ribbon:Button Header="{Binding Resources.Back, Source={x:Static local:ResourceService.Current}}"
                                   KeyTip="B"
                                   x:Name="BrowserBack"
                                   IsEnabled="False"
                                   LargeIcon="{StaticResource IconBack}"/>
                    <ribbon:Button Header="{Binding Resources.Forward, Source={x:Static local:ResourceService.Current}}"
                                   KeyTip="F"
                                   x:Name="BrowserForward"
                                   IsEnabled="False"
                                   LargeIcon="{StaticResource IconForward}"/>
                    <TextBox x:Name="BrowserAddr" Width="400"/>
                    <ribbon:Button Header="{Binding Resources.Goto, Source={x:Static local:ResourceService.Current}}"
                                   KeyTip="G"
                                   x:Name="BrowserGoto"
                                   LargeIcon="{StaticResource IconGoto}"/>
                    <ribbon:Button Header="{Binding Resources.Refresh, Source={x:Static local:ResourceService.Current}}"
                                   KeyTip="R"
                                   x:Name="BrowserRefresh"
                                   LargeIcon="{StaticResource IconRefresh}"/>
                    <ribbon:Button Header="{Binding Resources.BackToGame, Source={x:Static local:ResourceService.Current}}"
                                   KeyTip="H"
                                   x:Name="BrowserBackToGame"
                                   LargeIcon="{StaticResource IconGame}"/>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="{Binding Resources.Actions, Source={x:Static local:ResourceService.Current}}">
                    <ribbon:ToggleButton Header="{Binding Resources.Mute, Source={x:Static local:ResourceService.Current}}"
                                         KeyTip="M"
                                         IsChecked="{Binding Volume.IsMute, Source={x:Static Models:Status.Current}}"
                                         IsEnabled="{Binding IsGameLoaded, Source={x:Static Models:Status.Current}}"/>
                    <ribbon:Button Header="{Binding Resources.Screenshot, Source={x:Static local:ResourceService.Current}}" KeyTip="S" x:Name="ScreenShotButton"/>
                    <ribbon:Button Header="{Binding Resources.CleanCache, Source={x:Static local:ResourceService.Current}}" KeyTip="C" x:Name="DeleteCacheButton"/>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="{Binding Resources.Proxy, Source={x:Static local:ResourceService.Current}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Content="{Binding Resources.Proxy_UseProxy, Source={x:Static local:ResourceService.Current}}"
                                  
                                  Grid.ColumnSpan="2"
                                  x:Name="EnableProxy"
                                  IsChecked="{Binding EnableProxy, Mode=OneWay, Source={x:Static local:Config.Current}}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Resources.Proxy_Address, Source={x:Static local:ResourceService.Current}}"/>
                        <TextBox Grid.Row="1" Grid.Column="1"
                                 Margin="2" Width="100"
                                 x:Name="ProxyHost"
                                 IsEnabled="{Binding IsChecked, ElementName=EnableProxy}"
                                 Text="{Binding Proxy.Host, Mode=OneWay, Source={x:Static local:Config.Current}}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Resources.Proxy_Port, Source={x:Static local:ResourceService.Current}}"/>
                        <TextBox Grid.Row="2" Grid.Column="1"
                                 Margin="2" Width="100"
                                 x:Name="ProxyPort"
                                 IsEnabled="{Binding IsChecked, ElementName=EnableProxy}"
                                 Text="{Binding Proxy.Port, Mode=OneWay, Source={x:Static local:Config.Current}}"/>
                    </Grid>
                    <ribbon:Button Header="{Binding Resources.Update, Source={x:Static local:ResourceService.Current}}" x:Name="UpdateProxySetting"/>
                    <ribbon:Button Header="{Binding Resources.Cancel, Source={x:Static local:ResourceService.Current}}" x:Name="CancelProxySetting"/>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="HTTPS">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Content="{Binding Resources.Proxy_UseHTTPS, Source={x:Static local:ResourceService.Current}}"
                                  
                                  Grid.ColumnSpan="2"
                                  x:Name="EnableProxyHTTPS"
                                  IsChecked="{Binding EnableProxyHTTPS, Mode=OneWay, Source={x:Static local:Config.Current}}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Resources.Proxy_Address, Source={x:Static local:ResourceService.Current}}"/>
                        <TextBox Grid.Row="1" Grid.Column="1"
                                 Margin="2" Width="100"
                                 x:Name="ProxyHostHTTPS"
                                 IsEnabled="{Binding IsChecked, ElementName=EnableProxyHTTPS}"
                                 Text="{Binding HTTPSProxy.Host, Mode=OneWay, Source={x:Static local:Config.Current}}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Resources.Proxy_Port, Source={x:Static local:ResourceService.Current}}"/>
                        <TextBox Grid.Row="2" Grid.Column="1"
                                 Margin="2" Width="100"
                                 x:Name="ProxyPortHTTPS"
                                 IsEnabled="{Binding IsChecked, ElementName=EnableProxyHTTPS}"
                                 Text="{Binding HTTPSProxy.Port, Mode=OneWay, Source={x:Static local:Config.Current}}"/>
                    </Grid>
                </ribbon:RibbonGroupBox>
            </ribbon:RibbonTabItem>
            <ribbon:RibbonTabItem Header="{Binding Resources.RibbonTab_View, Source={x:Static local:ResourceService.Current}}" KeyTip="V">
                <ribbon:RibbonGroupBox Header="Language">
                    <ribbon:ComboBox x:Name="LanguageBox"
                                     IsEditable="False" KeyTip="L"
                                     Width="100"
                                     SelectedValuePath="Name"
                                     SelectedValue="{Binding Language, Mode=TwoWay, Source={x:Static local:Config.Current}}"/>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="{Binding Resources.Theme, Source={x:Static local:ResourceService.Current}}">
                    <ribbon:ComboBox x:Name="Themes"
                                     IsEditable="False" KeyTip="TH"
                                     SelectedValue="{Binding Theme, Mode=TwoWay, Source={x:Static local:Config.Current}}"/>
                    <ribbon:CheckBox Header="{Binding Resources.Theme_NoDWM, Source={x:Static local:ResourceService.Current}}"
                                     
                                     x:Name="NoDWM"
                                     KeyTip="D"
                                     IsChecked="{Binding NoDWM, Mode=TwoWay, Source={x:Static local:Config.Current}}"/>
                    <ribbon:CheckBox Header="{Binding Resources.Theme_Aero, Source={x:Static local:ResourceService.Current}}"
                                     
                                     x:Name="UseAeroControl"
                                     KeyTip="A"
                                     IsChecked="{Binding Aero, Mode=TwoWay, Source={x:Static local:Config.Current}}"/>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="{Binding Resources.Font, Source={x:Static local:ResourceService.Current}}">
                    <ribbon:RibbonToolBar DataContext="ribbonWindow">
                        <ribbon:RibbonToolBar.LayoutDefinitions>
                            <ribbon:RibbonToolBarLayoutDefinition>
                                <ribbon:RibbonToolBarRow>
                                    <ribbon:RibbonToolBarControlDefinition Target="SelectFontFamily" Width="200"/>
                                </ribbon:RibbonToolBarRow>
                                <ribbon:RibbonToolBarRow>
                                    <ribbon:RibbonToolBarControlDefinition Target="TextFontSize" Width="160"/>
                                    <ribbon:RibbonToolBarControlDefinition Target="FontSmall"/>
                                    <ribbon:RibbonToolBarControlDefinition Target="FontLarge"/>
                                </ribbon:RibbonToolBarRow>
                            </ribbon:RibbonToolBarLayoutDefinition>
                        </ribbon:RibbonToolBar.LayoutDefinitions>
                        <ribbon:ComboBox x:Name="SelectFontFamily"
                                         KeyTip="FF" IsEditable="True"
                                         ItemsSource="{x:Static Fonts.SystemFontFamilies}"
                                         SelectedValue="{Binding FontFamily, Source={x:Static local:Config.Current}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                         SizeDefinition="Small"/>
                        <TextBox x:Name="TextFontSize" Text="{Binding FontSize, Source={x:Static local:Config.Current}, Mode=TwoWay}"/>
                        <ribbon:Button x:Name="FontSmall"
                                       SizeDefinition="Small" KeyTip="FS"
                                       Icon="Images\ShrinkFont.png"/>
                        <ribbon:Button x:Name="FontLarge"
                                       SizeDefinition="Small" KeyTip="FL"
                                       Icon="Images\GrowFont.png"/>
                    </ribbon:RibbonToolBar>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="{Binding Resources.Notification, Source={x:Static local:ResourceService.Current}}">
                    <CheckBox Content="{Binding Resources.Notification_Toast, Source={x:Static local:ResourceService.Current}}"
                              IsEnabled="{x:Static local:ToastNotifier.IsSupported}"
                              IsChecked="{Binding PreferToastNotify, Source={x:Static local:Config.Current}}"
                              ToolTip="{Binding Resources.Notification_ToolTip_Win10, Source={x:Static local:ResourceService.Current}}"/>
                </ribbon:RibbonGroupBox>
            </ribbon:RibbonTabItem>
            <ribbon:RibbonTabItem Header="{Binding Resources.RibbonTab_Window, Source={x:Static local:ResourceService.Current}}" KeyTip="W">
                <ribbon:RibbonGroupBox Header="{Binding Resources.Window_Subwindow, Source={x:Static local:ResourceService.Current}}">
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:AdmiralView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:FleetView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:MissionView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:RepairView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:BuildingView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:DevelopView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:QuestOverview/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:CompassView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:MapHPView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                    <ribbon:ToggleButton Margin="0,0,4,0" Loaded="SetToggleBinding">
                        <ribbon:ToggleButton.Tag>
                            <Views:BattleView/>
                        </ribbon:ToggleButton.Tag>
                    </ribbon:ToggleButton>
                </ribbon:RibbonGroupBox>
                <ribbon:RibbonGroupBox Header="{Binding Resources.Window_Standalone, Source={x:Static local:ResourceService.Current}}">
                    <Button Margin="2" Tag="{x:Type ViewStandalone:ShipCatalog}" Loaded="SetUniqueWindowCommand"/>
                    <Button Margin="2" Tag="{x:Type ViewStandalone:EquipmentCatalog}" Loaded="SetUniqueWindowCommand"/>
                </ribbon:RibbonGroupBox>
            </ribbon:RibbonTabItem>
        </ribbon:Ribbon>
        <Dock:DockingManager Grid.Row="1" x:Name="DockMan">
            <Dock:DockingManager.Theme>
                <!--<Theme2010:VS2010Theme/>-->
                <Theme2013:Vs2013BlueTheme/>
            </Dock:DockingManager.Theme>
            <Dock:LayoutRoot>
                <Dock:LayoutPanel>
                    <Dock:LayoutDocumentPane>
                        <Dock:LayoutDocument x:Name="BrowserDocument"
                                             CanClose="False" CanFloat="False"
                                             ContentId="GameHost">
                            <local:KanColleBrowser x:Name="GameHost"/>
                        </Dock:LayoutDocument>
                    </Dock:LayoutDocumentPane>
                </Dock:LayoutPanel>
            </Dock:LayoutRoot>
        </Dock:DockingManager>
        <ribbon:StatusBar Grid.Row="2" FontSize="18" DataContext="{x:Static Models:Status.Current}">
            <ribbon:StatusBarItem HorizontalAlignment="Left" Content="{Binding StatusText}"/>
            <Separator HorizontalAlignment="Left"/>
            <ribbon:StatusBarItem HorizontalAlignment="Right" Margin="0,0,10,0">
                <TextBlock Text="{Binding BrowserZoomFactor, StringFormat={}{0:P0}, Source={x:Static local:Config.Current}}"/>
            </ribbon:StatusBarItem>
            <ribbon:StatusBarItem HorizontalAlignment="Right">
                <Slider Width="100"
                        Minimum="0.5" Maximum="2"
                        IsSnapToTickEnabled="True"
                        Ticks="0.5,0.75,1,1.25,1.5,1.75,2"
                        Value="{Binding BrowserZoomFactor, Source={x:Static local:Config.Current}}"
                        ValueChanged="SetBrowserZoomFactor"/>
            </ribbon:StatusBarItem>
        </ribbon:StatusBar>
    </Grid>
</ribbon:RibbonWindow>
